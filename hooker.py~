import os
pas = 0
fail = 0
if os.system("g++ prog.cpp"): #just going to assume .cpp
	#prints inside if compilation fails
	exit(1)

tests = []
os.system("ls test*.cpp > output.txt") #there are always test*.cpp files, right? otherwise this will give errors. wont even create output.txt - the whole point of this hook was under the assumption we were to expect such things
with open('output.txt') as f:
	for line in f:
		#print line
		tests.append(line)	
for idx,i in enumerate(tests):
        if os.system("g++ -o test_"+str(idx)+" "+i):
        	exit(1)

tests1 = []
os.system("ls test_* > output1.txt")
with open('output1.txt') as q:
	for line in q:
		tests1.append(line)	
for j in tests1:
	if os.system("./"+j): #how are we checking for failure? i assume by exit status as we're running test cases ie assert 0 assert 1 type stuff
		fail += 1
	else:
		pas += 1 
print "You have passed: "+str(pas)+" tests and failed: "+str(fail)+" tests."
if fail > 0:
	exit(1)
